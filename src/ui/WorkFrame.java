/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * WorkFrame.java
 *
 * Created on 17.10.2011, 20:51:45
 */

package ui;

import base.collectors.Alphabet;
import base.sequencies.Chain;
import model.Algorithm;
import model.Input;
import model.MainOutputData;
import model.io.BuilderResultData;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

/**
 * @author Neestell
 */
public class WorkFrame extends javax.swing.JFrame {
    private ResultCharacteristicForm formOutputDevice;
    private List<Input> inputs;
    private Algorithm algorithm;

    {
        inputs = new ArrayList<Input>();
        formOutputDevice = new ResultCharacteristicForm(this);
    }

    /**
     * Creates new form WorkFrame
     */
    public WorkFrame() {
        initComponents();
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                try {
                    formOutputDevice.setVisible(false);
                    formOutputDevice.dispose();
                } catch (NullPointerException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        algorithmBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        leftBoundField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rightBoundField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        chainName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        addedChainsBox = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        addChainButton = new javax.swing.JButton();
        removeChainButton = new javax.swing.JButton();
        stepField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        thresholdMethodBox = new javax.swing.JComboBox();
        windowLengthField = new javax.swing.JTextField();
        balanceField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        precisionField = new javax.swing.JTextField();
        criterionBox = new javax.swing.JComboBox();
        seekerBox = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        windowDecrementField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        chainToSegmentation = new javax.swing.JTextArea();
        calculateButton = new javax.swing.JButton();
        segmentationButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        spentTimelabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        clearAreaButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jseg");


        algorithmBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithmBoxActionPerformed(evt);
            }
        });

        thresholdMethodBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdMethodBoxActionPerformed(evt);
            }
        });


        leftBoundField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftBoundFieldActionPerformed(evt);
            }
        });


        rightBoundField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightBoundFieldActionPerformed(evt);
            }
        });


        chainName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chainNameActionPerformed(evt);
            }
        });

        jLabel7.setText("Добавленные:");


        addChainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChainButtonActionPerformed(evt);
            }
        });


        stepField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepFieldActionPerformed(evt);
            }
        });


        windowLengthField.setText("9");
        windowLengthField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                windowLengthFieldActionPerformed(evt);
            }
        });

        chainToSegmentation.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateLength(e);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateLength(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                jLabel17.setText(String.valueOf(e.getLength()));
            }
        });


        balanceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceFieldActionPerformed(evt);
            }
        });


        precisionField.setText("0.01");
        precisionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precisionFieldActionPerformed(evt);
            }
        });


        criterionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criterionBoxActionPerformed(evt);
            }
        });

        seekerBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seekerBoxActionPerformed(evt);
            }

        });

        setResizable(false);

        windowDecrementField.setText("1");
        windowDecrementField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                windowDecrementFieldActionPerformed(evt);
            }
        });

        calculateButton.setText("Вычислить");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        segmentationButton.setText("Старт");
        segmentationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segmentationButtonActionPerformed(evt);
            }
        });

        addedChainsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBox cb = (JComboBox) evt.getSource();
                Input input = inputs.get(cb.getSelectedIndex());
                chainToSegmentation.setText(input.getChain());
                chainName.setText(input.getChainName());
            }
        });

        removeChainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeChainButtonActionPerformed(evt);
            }
        });

        clearAreaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAreaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        JPanel panel = new JPanel();
        panel.setLayout(null);
        //-----------------/
        jLabel1.setText("Алгоритм");
        jLabel1.setBounds(5, 5, 80, 20);
        panel.add(jLabel1);

        algorithmBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Base", "xxxx", "Item 3", "Item 4"}));
        algorithmBox.setBounds(5, 25, 250, 20);
        panel.add(algorithmBox);

        //-----------------/
        jLabel5.setText("Исходная цепь:");
        jLabel5.setBounds(270, 5, 120, 20);
        panel.add(jLabel5);

        chainName.setText("Chain_" + System.currentTimeMillis());
        chainName.setBounds(385, 5, 120, 20);
        panel.add(chainName);
        //-----------------/
        jLabel16.setText("Длина:");
        jLabel16.setBounds(510, 5, 50, 20);
        panel.add(jLabel16);

        jLabel17.setText("-");
        jLabel17.setBounds(560, 5, 80, 20);
        panel.add(jLabel17);

        addedChainsBox.setBounds(600, 5, 100, 20);
        panel.add(addedChainsBox);
        //-----------------/
        addChainButton.setText("+");
        addChainButton.setFont(new Font("Helvetica", Font.BOLD, 10));
        addChainButton.setBounds(700, 5, 45, 20);
        panel.add(addChainButton);

        removeChainButton.setText("-");
        removeChainButton.setFont(new Font("Helvetica", Font.BOLD, 10));
        removeChainButton.setBounds(745, 5, 40, 20);
        panel.add(removeChainButton);

        jLabel3.setText("Левая");
        jLabel3.setBounds(5, 45, 80, 20);
        panel.add(jLabel3);

        leftBoundField.setBounds(5, 65, 40, 20);
        leftBoundField.setText("0");
        panel.add(leftBoundField);

        jLabel4.setText("Правая границы");
        jLabel4.setBounds(50, 45, 100, 20);
        panel.add(jLabel4);

        rightBoundField.setBounds(50, 65, 40, 20);
        rightBoundField.setText("1");
        panel.add(rightBoundField);
        //-----------------/
        jLabel8.setText("Шаг");
        jLabel8.setBounds(150, 45, 30, 20);
        panel.add(jLabel8);

        stepField.setText("0.01");
        stepField.setBounds(150, 65, 40, 20);
        panel.add(stepField);
        //-----------------/

        jLabel11.setText("Точность");
        jLabel11.setBounds(200, 45, 70, 20);
        panel.add(jLabel11);

        precisionField.setText("0.01");
        precisionField.setBounds(200, 65, 40, 20);
        panel.add(precisionField);
        //-----------------/
        chainToSegmentation.setText("");
        JPanel panelForArea = new JPanel();
        panelForArea.setBounds(270, 25, 520, 200);
        panelForArea.setLayout(new SpringLayout());
        chainToSegmentation.setLineWrap(true);
        jScrollPane1.setViewportView(chainToSegmentation);
        chainToSegmentation.setColumns(46);
        chainToSegmentation.setRows(12);
        chainToSegmentation.setBorder(BorderFactory.createLineBorder(Color.black));
        panelForArea.add(jScrollPane1);
        panel.add(panelForArea);
        //-----------------/
        clearAreaButton.setText("Очистить");
        clearAreaButton.setBounds(270, 225, 100, 20);
        panel.add(clearAreaButton);
        //-----------------/
        jLabel14.setText("Затрачено времени:");
        jLabel14.setBounds(600, 350, 125, 20);
        panel.add(jLabel14);

        spentTimelabel.setText("00:00:00:00");
        spentTimelabel.setBounds(720, 350, 100, 20);
        panel.add(spentTimelabel);

        progressBar.setValue(50);
        progressBar.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        progressBar.setBounds(600, 340, 190, 10);
        panel.add(progressBar);
        //-----------------/
        calculateButton.setBounds(600, 315, 100, 20);
        panel.add(calculateButton);
        //-----------------/
        segmentationButton.setBounds(700, 315, 90, 20);
        panel.add(segmentationButton);
        //-----------------/
        jLabel9.setText("Метод выбора порога");
        jLabel9.setBounds(5, 90, 140, 20);
        panel.add(jLabel9);

        thresholdMethodBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Linear", "Dichotomic", "Random"}));
        thresholdMethodBox.setBounds(5, 110, 140, 20);
        panel.add(thresholdMethodBox);
        //-----------------/
        jLabel13.setText("Декремент окна");
        jLabel13.setBounds(150, 90, 100, 20);
        panel.add(jLabel13);

        windowDecrementField.setText("1");
        windowDecrementField.setBounds(150, 110, 40, 20);
        panel.add(windowDecrementField);
        //----------------/
        jLabel10.setText("Баланс");
        jLabel10.setBounds(150, 170, 80, 20);
        panel.add(jLabel10);

        balanceField.setText("0");
        balanceField.setBounds(150, 190, 40, 20);
        panel.add(balanceField);
        //----------------/
        jLabel2.setText("Длина окна");
        jLabel2.setBounds(150, 130, 70, 20);
        panel.add(jLabel2);

        windowLengthField.setText("9");
        windowLengthField.setBounds(150, 150, 40, 20);
        panel.add(windowLengthField);
        //----------------/
        jLabel12.setText("Критерий останова");
        jLabel12.setBounds(5, 130, 120, 20);
        panel.add(jLabel12);

        criterionBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Criterion Partial Orlov", "Min simmetry by Shreder", "Min simmetry by intervals", "Equality Of Depths", "Attitude Of Remoteness", "Minimum of DescriptiveInformation", "Golden ratio"}));
        criterionBox.setBounds(5, 150, 140, 20);
        panel.add(criterionBox);
        //-----------------/
        jLabel15.setText("Метод расчета std");
        jLabel15.setBounds(5, 170, 120, 20);
        panel.add(jLabel15);

        seekerBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Frequency of subwords", "Different between SAI and SGI", "?"}));
        seekerBox.setBounds(5, 190, 140, 20);
        panel.add(seekerBox);
        //-----------------/


        getContentPane().add(panel);
        setPreferredSize(new Dimension(800, 400));


        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearAreaButtonActionPerformed(ActionEvent evt) {
        chainToSegmentation.setText("");
        System.out.println("Поле очищено...");
    }

    private void removeChainButtonActionPerformed(ActionEvent evt) {
        String name = "";
        try {
            name = addedChainsBox.getItemAt(addedChainsBox.getSelectedIndex()).toString();
        } catch (NullPointerException e) {
        }

        try {
            addedChainsBox.removeItemAt(addedChainsBox.getSelectedIndex());
            inputs.remove(addedChainsBox.getSelectedIndex());
            System.out.println("Удалено " + name);
        } catch (ArrayIndexOutOfBoundsException e) {
            name = "";
        }


    }

    private void updateLength(DocumentEvent e) {
        jLabel17.setText(String.valueOf(e.getDocument().getLength()));
    }

    private void thresholdMethodBoxActionPerformed(ActionEvent evt) {

    }

    private void calculateButtonActionPerformed(ActionEvent evt) {
        System.out.println("Посчитать");
        List<MainOutputData> results = new LinkedList<MainOutputData>();
        for (Input input : inputs) {
            results.add(new BuilderResultData(new Chain(input.getChain()), new Alphabet(input.getChain())).create());
        }
        formOutputDevice = new ResultCharacteristicForm(this, results);
        formOutputDevice.setVisible(true);
    }

    private void seekerBoxActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void chainToSegmentationActionPerformed(javax.swing.event.AncestorListener evt) {
        jLabel17.setText(String.valueOf(chainToSegmentation.getText().length()));
    }


    private void algorithmBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithmBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_algorithmBoxActionPerformed

    private void leftBoundFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftBoundFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftBoundFieldActionPerformed

    private void rightBoundFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightBoundFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightBoundFieldActionPerformed

    private void chainNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chainNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chainNameActionPerformed

    private void stepFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stepFieldActionPerformed

    private void windowLengthFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_windowLengthFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_windowLengthFieldActionPerformed

    private void balanceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceFieldActionPerformed

    private void precisionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precisionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precisionFieldActionPerformed

    private void windowDecrementFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_windowDecrementFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_windowDecrementFieldActionPerformed

    private void segmentationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segmentationButtonActionPerformed
        algorithm.add(inputs);
        new Thread(algorithm).start();

    }

    private void addChainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segmentationButtonActionPerformed        
        for (int index = 0; index < addedChainsBox.getItemCount() || addedChainsBox.getItemCount() == 0; index++) {
            if (!chainName.getText().equals(addedChainsBox.getItemAt(addedChainsBox.getSelectedIndex())) && chainName.getText().trim().length() > 0) {
                inputs.add(getParameters());
                addedChainsBox.addItem(chainName.getText());
                System.out.println("Добавлено " + chainName.getText());
                chainName.setText("");
            }
        }


    }

    private void criterionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criterionBoxActionPerformed
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WorkFrame().setVisible(true);
            }
        });
    }

    public void changeProgress(int value) {
        progressBar.setValue(value);
    }

    public Input getParameters() {
        Input input = new Input();
        input.setAlgorithm(algorithmBox.getSelectedIndex());
        input.setBalance(Integer.valueOf(balanceField.getText()));
        input.setChainName(chainName.getText());
        input.setLeftBound(Double.valueOf(leftBoundField.getText()));
        input.setRightBound(Double.valueOf(rightBoundField.getText()));
        input.setPrecision(Double.valueOf(precisionField.getText()));
        input.setStopCriterion(criterionBox.getSelectedIndex());
        input.setThresholdMethod(thresholdMethodBox.getSelectedIndex());
        input.setWindowlength(Integer.valueOf(windowLengthField.getText()));
        input.setWindowdec(Integer.valueOf(windowDecrementField.getText()));
        input.setChain(chainToSegmentation.getText().replace("\n", ""));
        input.setSeeker(seekerBox.getSelectedIndex());

        input.setStep(Double.valueOf(stepField.getText()));

        return input;
    }

    private javax.swing.JComboBox thresholdMethodBox;
    private javax.swing.JComboBox seekerBox;
    private javax.swing.JButton addChainButton;
    private javax.swing.JButton removeChainButton;
    private javax.swing.JComboBox addedChainsBox;
    private javax.swing.JComboBox algorithmBox;
    private javax.swing.JTextField balanceField;
    private javax.swing.JButton calculateButton;
    private javax.swing.JTextField chainName;
    private javax.swing.JTextArea chainToSegmentation;
    private javax.swing.JComboBox criterionBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField leftBoundField;
    private javax.swing.JTextField precisionField;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField rightBoundField;
    private javax.swing.JButton segmentationButton;
    private javax.swing.JButton clearAreaButton;
    private javax.swing.JLabel spentTimelabel;
    private javax.swing.JTextField stepField;
    private javax.swing.JTextField windowDecrementField;
    private javax.swing.JTextField windowLengthField;

    public void setObserverToAlgorithm(Algorithm algorithm) {
        this.algorithm = algorithm;
        this.algorithm.addObserver(formOutputDevice);
    }


}
